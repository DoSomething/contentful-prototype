# Javascript PHP CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1

jobs:
  # Install dependencies & run tests.
  build:
    docker:
      - image: circleci/php:7.2-node-browsers
      - image: circleci/mariadb:10.3
        environment:
          MYSQL_DATABASE: phoenix
          MYSQL_USER: homestead
          MYSQL_PASSWORD: secret
    steps:
      # Check out source code for this branch & install dependencies.
      # If we can, we'll load these from cache (based on the lockfile).
      - checkout
      - run: sudo composer self-update
      # Install PHP extensions required by Laravel.
      - run: sudo docker-php-ext-install bcmath pdo_mysql
      # Install Composer & npm dependencies (using cache if found).
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run: composer install -n --prefer-dist --ignore-platform-reqs
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package-lock.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Build Javacript application.
      - run: GRAPHQL_URL=https://graphql-dev.dosomething.org/graphql npm run build
      # Lint with ESLint & type-check with Flow.
      - run: npm run lint
      - run: npm run flow
      # Run our Jest unit testing suite.
      - run: npm run test:ci
      # Prepare a functional environment so we can run the full application
      # for our browser test suite, and then start simple Laravel server.
      - run:
          name: prepare environment
          command: |
            cp .env.example .env
            php artisan key:generate
            php artisan gateway:key
            php artisan migrate --force
      # Run PHPUnit unit testing suite.
      - run: vendor/bin/phpunit
      # Start Laravel server & run Cypress browser tests.
      - run: php artisan serve && npm run cypress:ci
