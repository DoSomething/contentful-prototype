@import 'next-toolbox';

// Import Forge so we get our base styles.
$forge-path: '../../../node_modules/@dosomething/forge/assets/';
@import '~@dosomething/forge/scss/forge';

body,
html {
  font-family: $primary-font-family;
  line-height: 1.4;
}

// Reset browser defaults so this behaves like <a>
// or <input type="button"> elements do.
button {
  font-family: $primary-font-family;
  background: transparent;
  border: none;
}

.button {
  &:focus {
    border: none;
    box-shadow: 0 0 3px $blue, inset 0 0 1px rgba(0, 0, 0, 0.4);
  }
}

h1,
h2,
h3,
p {
  color: $black;
}

.inverted {
  h1,
  h2,
  h3,
  p {
    color: $white;
  }
}

.spinner {
  &.-centered {
    text-align: center;
    width: 100%;
  }
}

// @TODO: for cleanup. Adding to base for now since needed
// for validation in all forms.
.field-label {
  &.has-error {
    color: $error-color;
  }
}

// Override Forge rule for .text-field font-family (https://git.io/fjeFh).
.text-field {
  font-family: $primary-font-family;
}

// Utility classes.
// @TODO: Move over to Forge 7 soon!
.background-image-centered {
  background-position: center;
  background-size: cover;
}

.color-white {
  color: $white !important;
}

.color-gray {
  color: $med-gray !important;
}

.color-yellow {
  color: $primary-color !important;
}

.color-error {
  color: $error-color !important;
}

.bg-black {
  background-color: $black !important;
}

.bg-white {
  background-color: $white !important;
}

.bg-purple {
  background-color: $purple !important;
}

.bg-light-gray {
  background-color: $light-gray !important;
}

.bg-off-white {
  background-color: $off-white !important;
}

.bg-transparent {
  background-color: transparent !important;
}

.bordered {
  border: 1px solid rgba(0, 0, 0, 0.15);
  background-clip: padding-box;
}

.border-none {
  border: 0 none !important;
}

.border-top {
  border-top: 1px solid $primary-border-color;
}

.border-radius-none {
  border-radius: 0 !important;
}

.clearfix {
  @include clearfix;
}

.clear-both {
  clear: both;
}

.clear-left {
  clear: left;
}

.clear-right {
  clear: right;
}

.clear-none {
  clear: none;
}

// @TODO: Rename to match Tailwind's .block.
.display-block {
  display: block;
}

.inline {
  display: inline;
}

// @TODO: Rename to match Tailwind's .flex.
.display-flex {
  display: flex;
}

.expand-horizontal-lg {
  margin-left: -$base-spacing;
  margin-right: -$base-spacing;
}

.expand-horizontal-md {
  margin-left: -$half-spacing;
  margin-right: -$half-spacing;
}

.line-break {
  line-break: normal;
}

.flex-center-y {
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.flex-center-xy {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-align-center {
  align-items: center;
}

.flex-grow {
  flex-grow: 1;
}

.h-full {
  height: 100%;
}

.float-left {
  float: left;
}

.float-right {
  float: right;
}

.font-italic {
  font-style: italic;
}

.font-bold {
  font-weight: $weight-bold;
}

.font-normal {
  font-weight: normal;
}

.font-size-lg {
  font-size: $font-large;

  p {
    font-size: $font-large;
  }
}

.caps-lock {
  text-transform: uppercase;
}

.word-break {
  word-break: break-word;
}

// TODO: Remove this.
.padded {
  padding: $half-spacing;
}

.padding-md {
  padding: $half-spacing;
}

.padding-lg {
  padding: $base-spacing;
}

.padding-vertical-md {
  padding-top: $half-spacing;
  padding-bottom: $half-spacing;
}

.padding-vertical-lg {
  padding-top: $base-spacing;
  padding-bottom: $base-spacing;
}

.padding-horizontal-md {
  padding-left: $half-spacing;
  padding-right: $half-spacing;
}

.padding-horizontal-lg {
  padding-left: $base-spacing;
  padding-right: $base-spacing;
}

.padding-bottom-sm {
  padding-bottom: $half-spacing / 2;
}

.padding-bottom-md {
  padding-bottom: $half-spacing;
}

.padding-bottom-lg {
  padding-bottom: $base-spacing;
}

.padding-top-md {
  padding-top: $half-spacing;
}

.padding-top-lg {
  padding-top: $base-spacing;
}

.margin-sm {
  margin: 6px;
}

.margin-md {
  margin: $half-spacing;
}

.margin-lg {
  margin: $base-spacing;
}

.margin-bottom-none {
  margin-bottom: 0 !important;
}

.margin-horizontal-auto {
  margin-left: auto;
  margin-right: auto;
}

.margin-horizontal-lg {
  margin-left: $base-spacing;
  margin-right: $base-spacing;
}

.margin-horizontal-md {
  margin-left: $half-spacing;
  margin-right: $half-spacing;
}

.margin-bottom-sm {
  margin-bottom: 6px;
}

.margin-bottom-md {
  margin-bottom: $half-spacing;
}

.margin-bottom-lg {
  margin-bottom: $base-spacing;
}

.margin-bottom-xlg {
  margin-bottom: $section-spacing;
}

.margin-top-none {
  margin-top: 0 !important;
}

.margin-top-sm {
  margin-top: 6px;
}

.margin-top-md {
  margin-top: $half-spacing;
}

.margin-top-lg {
  margin-top: $base-spacing;
}

.margin-top-xlg {
  margin-top: $section-spacing;
}

.margin-vertical {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.margin-vertical-md {
  margin-top: $half-spacing;
  margin-bottom: $half-spacing;
}

.margin-vertical-lg {
  margin-top: $base-spacing;
  margin-bottom: $base-spacing;
}

.margin-vertical-xlg {
  margin-top: $section-spacing;
  margin-bottom: $section-spacing;
}

.margin-right {
  margin-right: $base-spacing;
}

.margin-right-md {
  margin-right: $half-spacing;
}

.margin-left-xlg {
  margin-left: $section-spacing;
}

.margin-left-md {
  margin-left: $half-spacing;
}

.rounded {
  border-radius: $lg-border-radius;
  overflow: hidden;
}

.rounded-top {
  border-radius: $lg-border-radius $lg-border-radius 0 0;
  overflow: hidden;
}

.rounded-bottom {
  border-radius: 0 0 $lg-border-radius $lg-border-radius;
  overflow: hidden;
}

.faded {
  opacity: 0.5;
}

.text-center {
  text-align: center;
}

.default-container {
  @include media($tablet) {
    @include span(12 no-gutters);
    @include push(2);
  }
}

.hide-on-mobile {
  @include media($small) {
    display: none;
  }
}

.league-gothic {
  font-family: $secondary-font-family;
  &.-sm {
    font-size: 50px;
    font-weight: 400;
  }
  &.-lg {
    font-size: 75px;
    font-weight: 400;
  }
}

// Search page form
.search-form {
  .text-field {
    @include media($medium) {
      min-width: 400px;
    }
  }
}

/*
|-------------------------------------------------------------------------------
| Tailwind-esh Class Names
|-------------------------------------------------------------------------------
|
| Class names above this section will likely go to the chopping block once we
| implement the use of TailWind in Phoenix, so when possible opt to use class
| names indicated below.
|
*/

.bg-gray-100 {
  background-color: $gray-100;
}

.bg-gray-200 {
  background-color: $gray-200;
}

.bg-gray-300 {
  background-color: $gray-300;
}

.bg-gray-400 {
  background-color: $gray-400;
}

.bg-gray-500 {
  background-color: $gray-500;
}

.bg-gray-600 {
  background-color: $gray-600;
}

.bg-gray-700 {
  background-color: $gray-700;
}

.bg-gray-800 {
  background-color: $gray-800;
}

.bg-gray-900 {
  background-color: $gray-900;
}

.font-normal {
  font-weight: $weight-normal;
}

.font-semibold {
  font-weight: $weight-sbold;
}

.font-bold {
  font-weight: $weight-bold;
}

.font-secondary {
  font-family: $secondary-font-family;
}

.list-reset {
  list-style: none;
  padding: 0;
}

.leading-none {
  line-height: 1;
}

.leading-tight {
  line-height: 1.25;
}

.leading-snug {
  line-height: 1.375;
}

.leading-normal {
  line-height: 1.5;
}

.leading-relaxed {
  line-height: 1.625;
}

.leading-loose {
  line-height: 2;
}

.p-1 {
  padding: $half-spacing / 4;
}

.p-2 {
  padding: $half-spacing / 2;
}

.p-4 {
  padding: $half-spacing;
}

.p-8 {
  padding: $base-spacing;
}

.px-1 {
  padding-left: $half-spacing / 4;
  padding-right: $half-spacing / 4;
}

.px-2 {
  padding-left: $half-spacing / 2;
  padding-right: $half-spacing / 2;
}

.px-4 {
  padding-left: $half-spacing;
  padding-right: $half-spacing;
}

.px-8 {
  padding-left: $base-spacing;
  padding-right: $base-spacing;
}

.px-16 {
  padding-left: $section-spacing;
  padding-right: $section-spacing;
}

.text-black {
  color: $black;
}

.text-gray-100 {
  color: $gray-100;
}

.text-gray-200 {
  color: $gray-200;
}

.text-gray-300 {
  color: $gray-300;
}

.text-gray-400 {
  color: $gray-400;
}

.text-gray-500 {
  color: $gray-500;
}

.text-gray-600 {
  color: $gray-600;
}

.text-gray-700 {
  color: $gray-700;
}

.text-gray-800 {
  color: $gray-800;
}

.text-gray-900 {
  color: $gray-900;
}

.text-white {
  color: $white;
}

.text-xs {
  font-size: $font-smaller;
}

.text-sm {
  font-size: $font-small;
}

.text-base {
  font-size: $font-regular;
}

.text-m {
  font-size: $font-medium;
}

.text-lg {
  font-size: $font-large;
}

.text-xl {
  font-size: $font-larger;
}

.text-xxl {
  font-size: $font-hero;
}

.uppercase {
  text-transform: uppercase;
}

.w-1\/2 {
  width: 50%;
}

.whitespace-no-wrap {
  white-space: nowrap;
}

/*
|-------------------------------------------------------------------------------
| Base 16 Grid
|-------------------------------------------------------------------------------
|
| Small - 4 columns
| Medium - 8 columns
| Large - 16 columns
*/

.base-12-grid {
  display: grid;

  // 4 columns
  grid-template-columns: [full-start] 1fr 1fr [midway] 1fr 1fr [full-end];
  grid-column-gap: $half-spacing;
  padding: $half-spacing;

  @include media($medium) {
    // 8 columns
    grid-template-columns: [full-start] 1fr [main-start] 1fr 1fr 1fr [midway] 1fr 1fr 1fr [main-end] 1fr [full-end];
    grid-column-gap: $base-spacing;
    padding: $base-spacing $section-spacing;
  }

  @include media($large) {
    // 12 columns
    grid-template-columns: [full-start] 1fr [wide-start] 1fr [main-start] 1fr [narrow-start] 1fr 1fr 1fr [midway] 1fr 1fr 1fr [narrow-end] 1fr [main-end] 1fr [wide-end] 1fr [full-end];
  }
}

.grid-full {
  grid-column: full-start / full-end;
}

.grid-compact {
  grid-column: full-start / full-end;

  @include media($medium) {
    grid-column: main-start / main-end;
  }

  @include media($large) {
    grid-column: compact-start / compact-end;
  }
}

.grid-main {
  grid-column: full-start / full-end;

  @include media($medium) {
    grid-column: main-start / main-end;
  }
}

.grid-narrow {
  grid-column: full-start / full-end;

  @include media($medium) {
    grid-column: main-start / main-end;
  }

  @include media($large) {
    grid-column: narrow-start / narrow-end;
  }
}

.grid-wide {
  grid-column: full-start / full-end;

  @include media($large) {
    grid-column: wide-start / wide-end;
  }
}

.grid-1\/2 {
  grid-column: auto / span 4;

  @include media($medium) {
    grid-column: auto / span 4;
  }

  @include media($large) {
    grid-column: auto / span 6;
  }
}
